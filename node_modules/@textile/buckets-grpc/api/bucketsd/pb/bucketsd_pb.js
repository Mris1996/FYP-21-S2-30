// source: api/bucketsd/pb/bucketsd.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.api.bucketsd.pb.Archive', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveConfig', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveRenew', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveStatus', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveWatchRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchiveWatchResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.Archives', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchivesRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ArchivesResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.CreateRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.CreateResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.DealInfo', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.DefaultArchiveConfigRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.DefaultArchiveConfigResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.LinksRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.LinksResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListIpfsPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListIpfsPathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListPathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.ListResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.Metadata', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.MovePathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.MovePathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PathAccessRole', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PathItem', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullIpfsPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullIpfsPathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullPathAccessRolesRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullPathAccessRolesResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PullPathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathAccessRolesRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathAccessRolesResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathRequest.Header', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathRequest.PayloadCase', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathResponse.Event', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathsRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathsRequest.Chunk', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathsRequest.Header', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathsRequest.PayloadCase', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.PushPathsResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RemovePathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RemovePathResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RemoveRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RemoveResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.Root', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RootRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.RootResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.SetDefaultArchiveConfigRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.SetDefaultArchiveConfigResponse', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.SetPathRequest', null, global);
goog.exportSymbol('proto.api.bucketsd.pb.SetPathResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.Metadata.displayName = 'proto.api.bucketsd.pb.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.Root = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.Root, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.Root.displayName = 'proto.api.bucketsd.pb.Root';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListRequest.displayName = 'proto.api.bucketsd.pb.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListResponse.displayName = 'proto.api.bucketsd.pb.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.CreateRequest.displayName = 'proto.api.bucketsd.pb.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.CreateResponse.displayName = 'proto.api.bucketsd.pb.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RootRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RootRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RootRequest.displayName = 'proto.api.bucketsd.pb.RootRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RootResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RootResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RootResponse.displayName = 'proto.api.bucketsd.pb.RootResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.LinksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.LinksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.LinksRequest.displayName = 'proto.api.bucketsd.pb.LinksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.LinksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.LinksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.LinksResponse.displayName = 'proto.api.bucketsd.pb.LinksResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ListPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListPathRequest.displayName = 'proto.api.bucketsd.pb.ListPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ListPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListPathResponse.displayName = 'proto.api.bucketsd.pb.ListPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PathItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.PathItem.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.PathItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PathItem.displayName = 'proto.api.bucketsd.pb.PathItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListIpfsPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ListIpfsPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListIpfsPathRequest.displayName = 'proto.api.bucketsd.pb.ListIpfsPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ListIpfsPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ListIpfsPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ListIpfsPathResponse.displayName = 'proto.api.bucketsd.pb.ListIpfsPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.bucketsd.pb.PushPathRequest.oneofGroups_);
};
goog.inherits(proto.api.bucketsd.pb.PushPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathRequest.displayName = 'proto.api.bucketsd.pb.PushPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathRequest.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathRequest.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathRequest.Header.displayName = 'proto.api.bucketsd.pb.PushPathRequest.Header';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathResponse.displayName = 'proto.api.bucketsd.pb.PushPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathResponse.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathResponse.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathResponse.Event.displayName = 'proto.api.bucketsd.pb.PushPathResponse.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.bucketsd.pb.PushPathsRequest.oneofGroups_);
};
goog.inherits(proto.api.bucketsd.pb.PushPathsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathsRequest.displayName = 'proto.api.bucketsd.pb.PushPathsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathsRequest.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathsRequest.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathsRequest.Header.displayName = 'proto.api.bucketsd.pb.PushPathsRequest.Header';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathsRequest.Chunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathsRequest.Chunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathsRequest.Chunk.displayName = 'proto.api.bucketsd.pb.PushPathsRequest.Chunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathsResponse.displayName = 'proto.api.bucketsd.pb.PushPathsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullPathRequest.displayName = 'proto.api.bucketsd.pb.PullPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullPathResponse.displayName = 'proto.api.bucketsd.pb.PullPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullIpfsPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullIpfsPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullIpfsPathRequest.displayName = 'proto.api.bucketsd.pb.PullIpfsPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullIpfsPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullIpfsPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullIpfsPathResponse.displayName = 'proto.api.bucketsd.pb.PullIpfsPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.SetPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.SetPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.SetPathRequest.displayName = 'proto.api.bucketsd.pb.SetPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.SetPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.SetPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.SetPathResponse.displayName = 'proto.api.bucketsd.pb.SetPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.MovePathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.MovePathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.MovePathRequest.displayName = 'proto.api.bucketsd.pb.MovePathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.MovePathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.MovePathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.MovePathResponse.displayName = 'proto.api.bucketsd.pb.MovePathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RemoveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RemoveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RemoveRequest.displayName = 'proto.api.bucketsd.pb.RemoveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RemoveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RemoveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RemoveResponse.displayName = 'proto.api.bucketsd.pb.RemoveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RemovePathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RemovePathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RemovePathRequest.displayName = 'proto.api.bucketsd.pb.RemovePathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.RemovePathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.RemovePathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.RemovePathResponse.displayName = 'proto.api.bucketsd.pb.RemovePathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathAccessRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathAccessRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathAccessRolesRequest.displayName = 'proto.api.bucketsd.pb.PushPathAccessRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PushPathAccessRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PushPathAccessRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PushPathAccessRolesResponse.displayName = 'proto.api.bucketsd.pb.PushPathAccessRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullPathAccessRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullPathAccessRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullPathAccessRolesRequest.displayName = 'proto.api.bucketsd.pb.PullPathAccessRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.PullPathAccessRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.PullPathAccessRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.PullPathAccessRolesResponse.displayName = 'proto.api.bucketsd.pb.PullPathAccessRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.ArchiveConfig.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveConfig.displayName = 'proto.api.bucketsd.pb.ArchiveConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.Archives = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.Archives.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.Archives, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.Archives.displayName = 'proto.api.bucketsd.pb.Archives';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.Archive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.Archive.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.Archive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.Archive.displayName = 'proto.api.bucketsd.pb.Archive';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.DealInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.DealInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.DealInfo.displayName = 'proto.api.bucketsd.pb.DealInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveRenew = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveRenew, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveRenew.displayName = 'proto.api.bucketsd.pb.ArchiveRenew';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.DefaultArchiveConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.DefaultArchiveConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.DefaultArchiveConfigRequest.displayName = 'proto.api.bucketsd.pb.DefaultArchiveConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.DefaultArchiveConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.DefaultArchiveConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.DefaultArchiveConfigResponse.displayName = 'proto.api.bucketsd.pb.DefaultArchiveConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.SetDefaultArchiveConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.SetDefaultArchiveConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.SetDefaultArchiveConfigRequest.displayName = 'proto.api.bucketsd.pb.SetDefaultArchiveConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.SetDefaultArchiveConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.SetDefaultArchiveConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.SetDefaultArchiveConfigResponse.displayName = 'proto.api.bucketsd.pb.SetDefaultArchiveConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveRequest.displayName = 'proto.api.bucketsd.pb.ArchiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveResponse.displayName = 'proto.api.bucketsd.pb.ArchiveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchivesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchivesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchivesRequest.displayName = 'proto.api.bucketsd.pb.ArchivesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchivesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.bucketsd.pb.ArchivesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchivesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchivesResponse.displayName = 'proto.api.bucketsd.pb.ArchivesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveWatchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveWatchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveWatchRequest.displayName = 'proto.api.bucketsd.pb.ArchiveWatchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.bucketsd.pb.ArchiveWatchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.bucketsd.pb.ArchiveWatchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.bucketsd.pb.ArchiveWatchResponse.displayName = 'proto.api.bucketsd.pb.ArchiveWatchResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesMap: (f = msg.getRolesMap()) ? f.toObject(includeInstance, undefined) : [],
    updatedAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    key: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.Metadata}
 */
proto.api.bucketsd.pb.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.Metadata;
  return proto.api.bucketsd.pb.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.Metadata}
 */
proto.api.bucketsd.pb.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRolesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readEnum, null, "", 0);
         });
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeEnum);
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * map<string, PathAccessRole> roles = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api.bucketsd.pb.PathAccessRole>}
 */
proto.api.bucketsd.pb.Metadata.prototype.getRolesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api.bucketsd.pb.PathAccessRole>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.bucketsd.pb.Metadata} returns this
 */
proto.api.bucketsd.pb.Metadata.prototype.clearRolesMap = function() {
  this.getRolesMap().clear();
  return this;};


/**
 * optional int64 updated_at = 2;
 * @return {number}
 */
proto.api.bucketsd.pb.Metadata.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.Metadata} returns this
 */
proto.api.bucketsd.pb.Metadata.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.api.bucketsd.pb.Metadata.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Metadata} returns this
 */
proto.api.bucketsd.pb.Metadata.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.Root.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.Root.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.Root} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.Root.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    thread: jspb.Message.getFieldWithDefault(msg, 6, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 7, ""),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    metadata: (f = msg.getMetadata()) && proto.api.bucketsd.pb.Metadata.toObject(includeInstance, f),
    linkKey: jspb.Message.getFieldWithDefault(msg, 10, ""),
    pathMetadataMap: (f = msg.getPathMetadataMap()) ? f.toObject(includeInstance, proto.api.bucketsd.pb.Metadata.toObject) : [],
    archives: (f = msg.getArchives()) && proto.api.bucketsd.pb.Archives.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.Root.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.Root;
  return proto.api.bucketsd.pb.Root.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.Root} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.Root.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThread(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 9:
      var value = new proto.api.bucketsd.pb.Metadata;
      reader.readMessage(value,proto.api.bucketsd.pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkKey(value);
      break;
    case 11:
      var value = msg.getPathMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api.bucketsd.pb.Metadata.deserializeBinaryFromReader, "", new proto.api.bucketsd.pb.Metadata());
         });
      break;
    case 12:
      var value = new proto.api.bucketsd.pb.Archives;
      reader.readMessage(value,proto.api.bucketsd.pb.Archives.deserializeBinaryFromReader);
      msg.setArchives(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.Root.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.Root.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.Root} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.Root.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getThread();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api.bucketsd.pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getLinkKey();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPathMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api.bucketsd.pb.Metadata.serializeBinaryToWriter);
  }
  f = message.getArchives();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.api.bucketsd.pb.Archives.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 created_at = 4;
 * @return {number}
 */
proto.api.bucketsd.pb.Root.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 updated_at = 5;
 * @return {number}
 */
proto.api.bucketsd.pb.Root.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string thread = 6;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getThread = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setThread = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string owner = 7;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 version = 8;
 * @return {number}
 */
proto.api.bucketsd.pb.Root.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Metadata metadata = 9;
 * @return {?proto.api.bucketsd.pb.Metadata}
 */
proto.api.bucketsd.pb.Root.prototype.getMetadata = function() {
  return /** @type{?proto.api.bucketsd.pb.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Metadata, 9));
};


/**
 * @param {?proto.api.bucketsd.pb.Metadata|undefined} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
*/
proto.api.bucketsd.pb.Root.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.Root.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string link_key = 10;
 * @return {string}
 */
proto.api.bucketsd.pb.Root.prototype.getLinkKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.setLinkKey = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * map<string, Metadata> path_metadata = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api.bucketsd.pb.Metadata>}
 */
proto.api.bucketsd.pb.Root.prototype.getPathMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api.bucketsd.pb.Metadata>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      proto.api.bucketsd.pb.Metadata));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.clearPathMetadataMap = function() {
  this.getPathMetadataMap().clear();
  return this;};


/**
 * optional Archives archives = 12;
 * @return {?proto.api.bucketsd.pb.Archives}
 */
proto.api.bucketsd.pb.Root.prototype.getArchives = function() {
  return /** @type{?proto.api.bucketsd.pb.Archives} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Archives, 12));
};


/**
 * @param {?proto.api.bucketsd.pb.Archives|undefined} value
 * @return {!proto.api.bucketsd.pb.Root} returns this
*/
proto.api.bucketsd.pb.Root.prototype.setArchives = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.Root} returns this
 */
proto.api.bucketsd.pb.Root.prototype.clearArchives = function() {
  return this.setArchives(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.Root.prototype.hasArchives = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListRequest}
 */
proto.api.bucketsd.pb.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListRequest;
  return proto.api.bucketsd.pb.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListRequest}
 */
proto.api.bucketsd.pb.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.bucketsd.pb.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootsList: jspb.Message.toObjectList(msg.getRootsList(),
    proto.api.bucketsd.pb.Root.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListResponse}
 */
proto.api.bucketsd.pb.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListResponse;
  return proto.api.bucketsd.pb.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListResponse}
 */
proto.api.bucketsd.pb.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.bucketsd.pb.Root;
      reader.readMessage(value,proto.api.bucketsd.pb.Root.deserializeBinaryFromReader);
      msg.addRoots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.bucketsd.pb.Root.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Root roots = 1;
 * @return {!Array<!proto.api.bucketsd.pb.Root>}
 */
proto.api.bucketsd.pb.ListResponse.prototype.getRootsList = function() {
  return /** @type{!Array<!proto.api.bucketsd.pb.Root>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.bucketsd.pb.Root, 1));
};


/**
 * @param {!Array<!proto.api.bucketsd.pb.Root>} value
 * @return {!proto.api.bucketsd.pb.ListResponse} returns this
*/
proto.api.bucketsd.pb.ListResponse.prototype.setRootsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.bucketsd.pb.Root=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.ListResponse.prototype.addRoots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.bucketsd.pb.Root, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.bucketsd.pb.ListResponse} returns this
 */
proto.api.bucketsd.pb.ListResponse.prototype.clearRootsList = function() {
  return this.setRootsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bootstrapCid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    unfreeze: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.CreateRequest}
 */
proto.api.bucketsd.pb.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.CreateRequest;
  return proto.api.bucketsd.pb.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.CreateRequest}
 */
proto.api.bucketsd.pb.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBootstrapCid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnfreeze(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBootstrapCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUnfreeze();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.CreateRequest} returns this
 */
proto.api.bucketsd.pb.CreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bootstrap_cid = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.getBootstrapCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.CreateRequest} returns this
 */
proto.api.bucketsd.pb.CreateRequest.prototype.setBootstrapCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool private = 3;
 * @return {boolean}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.bucketsd.pb.CreateRequest} returns this
 */
proto.api.bucketsd.pb.CreateRequest.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool unfreeze = 4;
 * @return {boolean}
 */
proto.api.bucketsd.pb.CreateRequest.prototype.getUnfreeze = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.bucketsd.pb.CreateRequest} returns this
 */
proto.api.bucketsd.pb.CreateRequest.prototype.setUnfreeze = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    root: (f = msg.getRoot()) && proto.api.bucketsd.pb.Root.toObject(includeInstance, f),
    links: (f = msg.getLinks()) && proto.api.bucketsd.pb.LinksResponse.toObject(includeInstance, f),
    seed: msg.getSeed_asB64(),
    seedCid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pinned: jspb.Message.getFieldWithDefault(msg, 5, 0),
    retrievalId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.CreateResponse}
 */
proto.api.bucketsd.pb.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.CreateResponse;
  return proto.api.bucketsd.pb.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.CreateResponse}
 */
proto.api.bucketsd.pb.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.bucketsd.pb.Root;
      reader.readMessage(value,proto.api.bucketsd.pb.Root.deserializeBinaryFromReader);
      msg.setRoot(value);
      break;
    case 2:
      var value = new proto.api.bucketsd.pb.LinksResponse;
      reader.readMessage(value,proto.api.bucketsd.pb.LinksResponse.deserializeBinaryFromReader);
      msg.setLinks(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSeed(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeedCid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPinned(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetrievalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.bucketsd.pb.Root.serializeBinaryToWriter
    );
  }
  f = message.getLinks();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.bucketsd.pb.LinksResponse.serializeBinaryToWriter
    );
  }
  f = message.getSeed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSeedCid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPinned();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRetrievalId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional Root root = 1;
 * @return {?proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getRoot = function() {
  return /** @type{?proto.api.bucketsd.pb.Root} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Root, 1));
};


/**
 * @param {?proto.api.bucketsd.pb.Root|undefined} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
*/
proto.api.bucketsd.pb.CreateResponse.prototype.setRoot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.clearRoot = function() {
  return this.setRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.hasRoot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LinksResponse links = 2;
 * @return {?proto.api.bucketsd.pb.LinksResponse}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getLinks = function() {
  return /** @type{?proto.api.bucketsd.pb.LinksResponse} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.LinksResponse, 2));
};


/**
 * @param {?proto.api.bucketsd.pb.LinksResponse|undefined} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
*/
proto.api.bucketsd.pb.CreateResponse.prototype.setLinks = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.clearLinks = function() {
  return this.setLinks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.hasLinks = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes seed = 3;
 * @return {!(string|Uint8Array)}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getSeed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes seed = 3;
 * This is a type-conversion wrapper around `getSeed()`
 * @return {string}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getSeed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSeed()));
};


/**
 * optional bytes seed = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSeed()`
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getSeed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSeed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.setSeed = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string seed_cid = 4;
 * @return {string}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getSeedCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.setSeedCid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 pinned = 5;
 * @return {number}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getPinned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.setPinned = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string retrieval_id = 6;
 * @return {string}
 */
proto.api.bucketsd.pb.CreateResponse.prototype.getRetrievalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.CreateResponse} returns this
 */
proto.api.bucketsd.pb.CreateResponse.prototype.setRetrievalId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.RootRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.RootRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.RootRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.RootRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.RootRequest}
 */
proto.api.bucketsd.pb.RootRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.RootRequest;
  return proto.api.bucketsd.pb.RootRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.RootRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.RootRequest}
 */
proto.api.bucketsd.pb.RootRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.RootRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.RootRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.RootRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.RootRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.RootRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.RootRequest} returns this
 */
proto.api.bucketsd.pb.RootRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.RootResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.RootResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.RootResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.RootResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    root: (f = msg.getRoot()) && proto.api.bucketsd.pb.Root.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.RootResponse}
 */
proto.api.bucketsd.pb.RootResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.RootResponse;
  return proto.api.bucketsd.pb.RootResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.RootResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.RootResponse}
 */
proto.api.bucketsd.pb.RootResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.bucketsd.pb.Root;
      reader.readMessage(value,proto.api.bucketsd.pb.Root.deserializeBinaryFromReader);
      msg.setRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.RootResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.RootResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.RootResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.RootResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.bucketsd.pb.Root.serializeBinaryToWriter
    );
  }
};


/**
 * optional Root root = 1;
 * @return {?proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.RootResponse.prototype.getRoot = function() {
  return /** @type{?proto.api.bucketsd.pb.Root} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Root, 1));
};


/**
 * @param {?proto.api.bucketsd.pb.Root|undefined} value
 * @return {!proto.api.bucketsd.pb.RootResponse} returns this
*/
proto.api.bucketsd.pb.RootResponse.prototype.setRoot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.RootResponse} returns this
 */
proto.api.bucketsd.pb.RootResponse.prototype.clearRoot = function() {
  return this.setRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.RootResponse.prototype.hasRoot = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.LinksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.LinksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.LinksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.LinksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.LinksRequest}
 */
proto.api.bucketsd.pb.LinksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.LinksRequest;
  return proto.api.bucketsd.pb.LinksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.LinksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.LinksRequest}
 */
proto.api.bucketsd.pb.LinksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.LinksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.LinksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.LinksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.LinksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.LinksRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.LinksRequest} returns this
 */
proto.api.bucketsd.pb.LinksRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.LinksRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.LinksRequest} returns this
 */
proto.api.bucketsd.pb.LinksRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.LinksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.LinksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.LinksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.LinksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    www: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ipns: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.LinksResponse}
 */
proto.api.bucketsd.pb.LinksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.LinksResponse;
  return proto.api.bucketsd.pb.LinksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.LinksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.LinksResponse}
 */
proto.api.bucketsd.pb.LinksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWww(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.LinksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.LinksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.LinksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.LinksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWww();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIpns();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.LinksResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.LinksResponse} returns this
 */
proto.api.bucketsd.pb.LinksResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string www = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.LinksResponse.prototype.getWww = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.LinksResponse} returns this
 */
proto.api.bucketsd.pb.LinksResponse.prototype.setWww = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ipns = 3;
 * @return {string}
 */
proto.api.bucketsd.pb.LinksResponse.prototype.getIpns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.LinksResponse} returns this
 */
proto.api.bucketsd.pb.LinksResponse.prototype.setIpns = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListPathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListPathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListPathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    path: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListPathRequest}
 */
proto.api.bucketsd.pb.ListPathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListPathRequest;
  return proto.api.bucketsd.pb.ListPathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListPathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListPathRequest}
 */
proto.api.bucketsd.pb.ListPathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListPathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListPathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListPathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.ListPathRequest} returns this
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.ListPathRequest} returns this
 */
proto.api.bucketsd.pb.ListPathRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListPathResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListPathResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListPathResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && proto.api.bucketsd.pb.PathItem.toObject(includeInstance, f),
    root: (f = msg.getRoot()) && proto.api.bucketsd.pb.Root.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListPathResponse}
 */
proto.api.bucketsd.pb.ListPathResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListPathResponse;
  return proto.api.bucketsd.pb.ListPathResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListPathResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListPathResponse}
 */
proto.api.bucketsd.pb.ListPathResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.bucketsd.pb.PathItem;
      reader.readMessage(value,proto.api.bucketsd.pb.PathItem.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new proto.api.bucketsd.pb.Root;
      reader.readMessage(value,proto.api.bucketsd.pb.Root.deserializeBinaryFromReader);
      msg.setRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListPathResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListPathResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListPathResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.bucketsd.pb.PathItem.serializeBinaryToWriter
    );
  }
  f = message.getRoot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.bucketsd.pb.Root.serializeBinaryToWriter
    );
  }
};


/**
 * optional PathItem item = 1;
 * @return {?proto.api.bucketsd.pb.PathItem}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.getItem = function() {
  return /** @type{?proto.api.bucketsd.pb.PathItem} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.PathItem, 1));
};


/**
 * @param {?proto.api.bucketsd.pb.PathItem|undefined} value
 * @return {!proto.api.bucketsd.pb.ListPathResponse} returns this
*/
proto.api.bucketsd.pb.ListPathResponse.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.ListPathResponse} returns this
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Root root = 2;
 * @return {?proto.api.bucketsd.pb.Root}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.getRoot = function() {
  return /** @type{?proto.api.bucketsd.pb.Root} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Root, 2));
};


/**
 * @param {?proto.api.bucketsd.pb.Root|undefined} value
 * @return {!proto.api.bucketsd.pb.ListPathResponse} returns this
*/
proto.api.bucketsd.pb.ListPathResponse.prototype.setRoot = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.ListPathResponse} returns this
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.clearRoot = function() {
  return this.setRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.ListPathResponse.prototype.hasRoot = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.bucketsd.pb.PathItem.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.PathItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.PathItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.PathItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.PathItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    cid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    path: jspb.Message.getFieldWithDefault(msg, 3, ""),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isDir: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.api.bucketsd.pb.PathItem.toObject, includeInstance),
    itemsCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    metadata: (f = msg.getMetadata()) && proto.api.bucketsd.pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.PathItem}
 */
proto.api.bucketsd.pb.PathItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.PathItem;
  return proto.api.bucketsd.pb.PathItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.PathItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.PathItem}
 */
proto.api.bucketsd.pb.PathItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDir(value);
      break;
    case 6:
      var value = new proto.api.bucketsd.pb.PathItem;
      reader.readMessage(value,proto.api.bucketsd.pb.PathItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemsCount(value);
      break;
    case 9:
      var value = new proto.api.bucketsd.pb.Metadata;
      reader.readMessage(value,proto.api.bucketsd.pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.PathItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.PathItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.PathItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.PathItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsDir();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.bucketsd.pb.PathItem.serializeBinaryToWriter
    );
  }
  f = message.getItemsCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api.bucketsd.pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cid = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.PathItem.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.bucketsd.pb.PathItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string path = 3;
 * @return {string}
 */
proto.api.bucketsd.pb.PathItem.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.api.bucketsd.pb.PathItem.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_dir = 5;
 * @return {boolean}
 */
proto.api.bucketsd.pb.PathItem.prototype.getIsDir = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setIsDir = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated PathItem items = 6;
 * @return {!Array<!proto.api.bucketsd.pb.PathItem>}
 */
proto.api.bucketsd.pb.PathItem.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.api.bucketsd.pb.PathItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.bucketsd.pb.PathItem, 6));
};


/**
 * @param {!Array<!proto.api.bucketsd.pb.PathItem>} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
*/
proto.api.bucketsd.pb.PathItem.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.bucketsd.pb.PathItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.bucketsd.pb.PathItem}
 */
proto.api.bucketsd.pb.PathItem.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.bucketsd.pb.PathItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional int32 items_count = 7;
 * @return {number}
 */
proto.api.bucketsd.pb.PathItem.prototype.getItemsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.setItemsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Metadata metadata = 9;
 * @return {?proto.api.bucketsd.pb.Metadata}
 */
proto.api.bucketsd.pb.PathItem.prototype.getMetadata = function() {
  return /** @type{?proto.api.bucketsd.pb.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.Metadata, 9));
};


/**
 * @param {?proto.api.bucketsd.pb.Metadata|undefined} value
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
*/
proto.api.bucketsd.pb.PathItem.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.bucketsd.pb.PathItem} returns this
 */
proto.api.bucketsd.pb.PathItem.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.bucketsd.pb.PathItem.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListIpfsPathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListIpfsPathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListIpfsPathRequest}
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListIpfsPathRequest;
  return proto.api.bucketsd.pb.ListIpfsPathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListIpfsPathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListIpfsPathRequest}
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListIpfsPathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListIpfsPathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.bucketsd.pb.ListIpfsPathRequest} returns this
 */
proto.api.bucketsd.pb.ListIpfsPathRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.bucketsd.pb.ListIpfsPathResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.bucketsd.pb.ListIpfsPathResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && proto.api.bucketsd.pb.PathItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.bucketsd.pb.ListIpfsPathResponse}
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.bucketsd.pb.ListIpfsPathResponse;
  return proto.api.bucketsd.pb.ListIpfsPathResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.bucketsd.pb.ListIpfsPathResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.bucketsd.pb.ListIpfsPathResponse}
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.bucketsd.pb.PathItem;
      reader.readMessage(value,proto.api.bucketsd.pb.PathItem.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.bucketsd.pb.ListIpfsPathResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.bucketsd.pb.ListIpfsPathResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.bucketsd.pb.PathItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional PathItem item = 1;
 * @return {?proto.api.bucketsd.pb.PathItem}
 */
proto.api.bucketsd.pb.ListIpfsPathResponse.prototype.getItem = function() {
  return /** @type{?proto.api.bucketsd.pb.PathItem} */ (
    jspb.Message.getWrapperField(this, proto.api.bucketsd.pb.PathItem, 1));
};


/**
 * @param {?proto.api.bucketsd.pb.PathItem|undefined} val